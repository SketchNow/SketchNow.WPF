<UserControl x:Class="SketchNow.Views.ToolBarView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="clr-namespace:SketchNow.Controls"
             xmlns:converters="clr-namespace:SketchNow.Converters"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:jas="clr-namespace:WPF.JoshSmith.Controls;assembly=WPF.JoshSmith.Controls.DragCanvas"
             xmlns:local="clr-namespace:SketchNow.Views"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:properties="clr-namespace:SketchNow.Properties"
             xmlns:valueConverters="http://schemas.superdev.ch/valueconverters/2016/xaml"
             xmlns:vms="clr-namespace:SketchNow.ViewModels"
             x:Name="TooBarControl"
             d:DataContext="{d:DesignInstance IsDesignTimeCreatable=False,
                                              Type={x:Type vms:MainWindowViewModel}}"
             d:DesignHeight="300"
             d:DesignWidth="800"
             mc:Ignorable="d">
  <UserControl.Resources>
    <valueConverters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
    <converters:EnumToIndexConverter x:Key="EnumToIndexConverter" />
    <converters:DivisionMathConverter x:Key="DivisionMathConverter" />
  </UserControl.Resources>
  <jas:DragCanvas>
    <StackPanel Canvas.Left="{Binding (Canvas.Left), ElementName=ToolBar, ConverterParameter=81, Converter={StaticResource MathAddConverter}}"
                Canvas.Top="{Binding (Canvas.Top), ElementName=ToolBar, ConverterParameter=65, Converter={StaticResource MathAddConverter}}"
                jas:DragCanvas.CanBeDragged="False"
                Orientation="Horizontal">
      <Button Command="{Binding CanvasPages.SelectedPage.UndoCommand}"
              Content="{materialDesign:PackIcon Kind=Undo}"
              Style="{StaticResource MaterialDesignPaperDarkButton}" />
      <Button Command="{Binding CanvasPages.SelectedPage.RedoCommand}"
              Content="{materialDesign:PackIcon Kind=Redo}"
              Style="{StaticResource MaterialDesignPaperDarkButton}" />
      <Button Command="{Binding CanvasPages.SelectedPage.ClearCommand}"
              Content="{materialDesign:PackIcon Kind=Delete}"
              Style="{StaticResource MaterialDesignPaperDarkButton}" />
    </StackPanel>
    <StackPanel x:Name="ToolBar"
                Canvas.Left="{Binding ActualWidth, ElementName=TooBarControl, Converter={StaticResource DivisionMathConverter}, ConverterParameter=1.75}"
                Canvas.Top="{Binding ActualHeight, ElementName=TooBarControl, Converter={StaticResource DivisionMathConverter}, ConverterParameter=1.25, Mode=OneWay}"
                Orientation="Horizontal">
      <ListBox Margin="2"
               SelectedIndex="{Binding SelectedToolIndex}"
               Style="{StaticResource MaterialDesignToolToggleListBox}">
        <ListBoxItem IsEnabled="False">
          <controls:IconWithText Kind="CursorMove"
                                 Text="{x:Static properties:Resource.Move}"
                                 ToolTip="{x:Static properties:Resource.ToolMoveDescription}" />
        </ListBoxItem>
      </ListBox>
      <ListBox Margin="2"
               SelectedIndex="{Binding SelectedToolIndex}"
               Style="{StaticResource MaterialDesignToolToggleListBox}">
        <ListBoxItem>
          <controls:IconWithText Kind="CursorDefault"
                                 Text="{x:Static properties:Resource.Cursor}"
                                 ToolTip="{x:Static properties:Resource.ToolCursorDescription}" />
        </ListBoxItem>
        <ListBoxItem x:Name="ToolBarPen">
          <controls:IconWithText Kind="Pen"
                                 Text="{x:Static properties:Resource.Ink}"
                                 ToolTip="{x:Static properties:Resource.ToolInkDescription}" />
        </ListBoxItem>
        <ListBoxItem>
          <controls:IconWithText Kind="Eraser"
                                 Text="{x:Static properties:Resource.Eraser}"
                                 ToolTip="{x:Static properties:Resource.ToolEraserDescription}" />
        </ListBoxItem>
        <ListBoxItem>
          <controls:IconWithText Kind="Select"
                                 Text="{x:Static properties:Resource.Select}"
                                 ToolTip="{x:Static properties:Resource.ToolSelectDescription}" />
        </ListBoxItem>
      </ListBox>
      <ListBox Margin="2"
               SelectedIndex="{Binding SelectedWhiteBoardMode, Converter={StaticResource EnumToIndexConverter}}"
               Style="{StaticResource MaterialDesignToolToggleListBox}">
        <ListBoxItem>
          <controls:IconWithText Kind="DesktopWindows"
                                 Text="{x:Static properties:Resource.Screen}"
                                 ToolTip="{x:Static properties:Resource.ToolScreenDescription}" />
        </ListBoxItem>
        <ListBoxItem>
          <controls:IconWithText Kind="Presentation"
                                 Text="{x:Static properties:Resource.Board}"
                                 ToolTip="{x:Static properties:Resource.ToolBoardDescription}" />
        </ListBoxItem>
      </ListBox>
    </StackPanel>
    <StackPanel Canvas.Left="{Binding (Canvas.Left), Converter={StaticResource MathAddConverter}, ElementName=ToolBar, ConverterParameter=80}"
                Canvas.Top="{Binding (Canvas.Top), ConverterParameter=-36, Converter={StaticResource MathAddConverter}, ElementName=ToolBar}"
                jas:DragCanvas.CanBeDragged="False"
                Orientation="Horizontal"
                Visibility="{Binding IsSelected, Converter={StaticResource BoolToVisibilityConverter}, ElementName=ToolBarPen}">
      <ListBox x:Name="ColorList"
               Margin="1"
               ItemsSource="{Binding ColorList}"
               SelectedIndex="0"
               SelectedItem="{Binding SelectedColor, Mode=TwoWay}"
               Style="{StaticResource MaterialDesignToolToggleListBox}">
        <ListBox.ItemTemplate>
          <DataTemplate DataType="materialDesign:PackIcon">
            <materialDesign:PackIcon Foreground="{Binding Converter={StaticResource ColorToBrushConverter}}" Kind="Circle" />
          </DataTemplate>
        </ListBox.ItemTemplate>
      </ListBox>
      <ListBox Margin="1"
               ItemsSource="{Binding StrokeSizeList}"
               SelectedIndex="0"
               SelectedItem="{Binding SelectedStrokeSize}"
               Style="{StaticResource MaterialDesignToolToggleListBox}">
        <ListBox.ItemTemplate>
          <DataTemplate DataType="materialDesign:PackIcon">
            <materialDesign:PackIcon Width="{Binding}"
                                     Foreground="{Binding SelectedItem, ElementName=ColorList, Converter={StaticResource ColorToBrushConverter}}"
                                     Kind="Circle" />
          </DataTemplate>
        </ListBox.ItemTemplate>
      </ListBox>
    </StackPanel>
  </jas:DragCanvas>
</UserControl>
